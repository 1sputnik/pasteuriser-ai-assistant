name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC",
            artifact: "Windows-MSVC.7z",
            os: windows-latest,
            cc: "cl",
            cxx: "cl",
            environment_script: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars32.bat",
            targets: "ptusa_main libptusa_main main_test main_perfomance_test",
            run_tests: "true"
          }
        - {
            name: "Windows Latest MinGW",
            artifact: "Windows-MinGW.7z",
            os: windows-latest,
            cc: "gcc",
            cxx: "g++",
            targets: "ptusa_main libptusa_main",
            run_tests: "false"
          }
        - {
            name: "Ubuntu Latest GCC",
            artifact: "Linux.7z",
            os: ubuntu-latest,
            cc: "gcc",
            cxx: "g++",
            targets: "ptusa_main libptusa_main main_test main_perfomance_test",
            run_tests: "true"
          }

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}
    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}