# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake Build Matrix

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    if: ${{ (github.repository == '1sputnik/pasteuriser-ai-assistant') && ( (github.event_name == 'push') || (github.event_name == 'schedule') || (github.event_name == 'merge_group') || ((github.event_name == 'pull_request_target') )) }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
          name: "Windows Latest MS",
          os: windows-latest,
          cc: "cl",
          cxx: "cl",
          run_tests: "false" 
        }
        - {
          name: "Windows Latest MinGW",
          os: windows-latest,
          cc: "gcc",
          cxx: "g++",
          run_tests: "false" 
        }
        - {
          name: "Ubuntu Latest GCC",
          os: ubuntu-latest,
          cc: "gcc",
          cxx: "g++",
          run_tests: "false" 
        }
        - {
          name: "Ubuntu Latest Clang",
          os: ubuntu-latest,
          cc: "clang",
          cxx: "clang++",
          run_tests: "false" 
        }

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
